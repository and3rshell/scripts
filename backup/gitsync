#!/usr/bin/env bash

# shellcheck disable=SC1091

source config

DOTFILES_BACKUP_FILE="$XDG_CONFIG_HOME/gitbackup.cfg"

dotfilesPush() {
    gitDir="$HOME/.local/git/$1"
    workTree="$HOME/"

    if [ ! -d "$gitDir" ]; then
        echoRedExit "Directory $gitDir doesn't exist."
    fi

    # files=$(sed "s/\$HOME/\/home\/$USER/g;s/\$XDG_CONFIG_HOME/\/home\/$USER\/\.config/g" $DOTFILES_BACKUP_FILE)
    files=$(sed "/^#/d;s/\$HOME/\/home\/$USER/g;s/\$XDG_CONFIG_HOME/\/home\/$USER\/\.config/g" $DOTFILES_BACKUP_FILE)

    # for file in "${files[@]}"; do
    #     echo $file
    # done

    # exit

    echoBlue "Current dir: $HOME"
    cd "$HOME" || exit 1

    # `git ls-files` to show tracked files
    # for file in "${files[@]}"; do
    git --git-dir="$gitDir" --work-tree="$workTree" add $files
    # done

    git --git-dir="$gitDir" --work-tree="$workTree" commit -m 'sync' --untracked-files=no
    git --git-dir="$gitDir" --work-tree="$workTree" push
    echo -e "\n================================\n"
}

gitPull() {
    local pullDir="$1"

    echo -e "\e[1;34mCurrent dir: $pullDir\e[0m"
    cd "$pullDir" || exit 1
    git pull || exit 1
    echo -e "\n================================\n"
}

dotfilesStatus() {
    echo -e "dotfiles status:"
    cd || exit 1
    git --git-dir="$HOME/.local/git/dotfiles" --work-tree="$HOME/" status --untracked-files=no
    echo -e "\n================================\n"
}

git_status() {
    local dir="$1"

    if [ ! -d "$dir" ]; then
        echo -e "\e[1;31m$dir\e[0m doesn't exist"
        echo
        return
    fi

    echo -e "\e[1;32m$dir\e[0m"
    cd "$dir" || exit 1
    git status -s
    echo
}

git_push() {
    local dir="$1"

    if [ ! -d "$dir" ]; then
        echo -e "\e[1;31m$dir\e[0m doesn't exist"
        echo
        return
    fi

    echo -e "\e[1;32m$dir\e[0m"
    cd "$dir" || exit 1
    git add -A || exit 1
    git commit -m "sync"
    git push || exit 1
    echo
}

case "$1" in
    "status")
        git_status "$HOME/.local/scripts"
        git_status "$HOME/.local/git/moonwm"
        # git_status "$HOME/.local/git/dwmblocks-async"
        git_status "$HOME/.local/git/st-enhanced"
        git_status "$HOME/.local/git/dmenu-enhanced"
        git_status "$HOME/.local/git/work"
        git_status "$HOME/.local/git/unix_bootstrap"
        git_status "$HOME/.config/nvim"
        ;;
    "push")
        git_push "$HOME/.local/scripts"
        git_push "$HOME/.local/git/moonwm"
        # git_push "$HOME/.local/git/dwmblocks-async"
        git_push "$HOME/.local/git/st-enhanced"
        git_push "$HOME/.local/git/dmenu-enhanced"
        git_push "$HOME/.local/git/work"
        git_push "$HOME/.local/git/unix_bootstrap"
        git_push "$HOME/.config/nvim"
        ;;
    "push-df")
        dotfilesPush "dotfiles"
        ;;
    "status-df")
        git --git-dir="$HOME/.local/git/dotfiles" --work-tree="$HOME/" status --untracked-files=no
        ;;
    # "pulldf")
    #     git --git-dir="$HOME/.local/git/dotfiles" --work-tree="$HOME/" pull
    #     ;;
    *)
        echo "use status/push/pull/pushdf" && exit 1
        ;;
esac
