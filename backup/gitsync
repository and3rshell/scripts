#!/usr/bin/env bash

# shellcheck disable=SC1091

source config

declare -A GIT_DIRS=(
    ["scripts"]="$HOME/.local/scripts"
    # ["moonwm"]="$HOME/.local/git/projects/moonwm"
    ["st-enhanced"]="$HOME/.local/projects/git/st-enhanced"
    ["dmenu-enhanced"]="$HOME/.local/projects/git/dmenu-enhanced"
    # ["work"]="$HOME/.local/projects/git/work"
    ["unix_bootstrap"]="$HOME/.local/projects/git/unix_bootstrap"
    ["nvim"]="$HOME/.config/nvim"
    ["dotfiles"]="$HOME/.local/projects/git/dotfiles"
    ["server-files"]="$HOME/.local/projects/git/server-files"
)

git_status() {
    local dir="$1"

    if [ ! -d "$dir" ]; then
        echo -e "\e[1;31m$dir\e[0m doesn't exist\n"
        return
    fi

    echo -e "Working dir \e[1;32m$dir\e[0m:"
    cd "$dir" || exit 1
    git status -s
    echo
}

git_push() {
    local dir="$1"

    if [ ! -d "$dir" ]; then
        echo -e "\e[1;31m$dir\e[0m doesn't exist\n"
        return
    fi

    echo -e "Working dir \e[1;32m$dir\e[0m:"
    cd "$dir" || exit 1
    git add -A
    git commit -m "sync"
    git push
    echo
}

git_pull() {
    local dir="$1"

    if [ ! -d "$dir" ]; then
        echo -e "\e[1;31m$dir\e[0m doesn't exist"
        echo
        return
    fi

    echo -e "Working dir \e[1;32m$dir\e[0m:"
    cd "$dir" || exit 1
    git pull
    echo
}

case "$1" in
    "status")
        for key in "${!GIT_DIRS[@]}"; do
            git_status "${GIT_DIRS[$key]}"
        done
        ;;
    "push")
        for key in "${!GIT_DIRS[@]}"; do
            git_push "${GIT_DIRS[$key]}"
        done
        ;;
    "pull")
        for key in "${!GIT_DIRS[@]}"; do
            git_pull "${GIT_DIRS[$key]}"
        done
        ;;
    *)
        echo "Usage: status/push/pull"
        exit 1
        ;;
esac
