#!/usr/bin/env bash

# shellcheck disable=SC1091

source config

gitPush() {
    local pushDir="$1"

    echoBlue -n "Current dir: $pushDir"
    cd "$pushDir" || exit 1
    git add . || exit 1
    git commit -m "sync"
    git push || exit 1
    echo -e "\n======\n"
}

acericePush() {
    gitDir="$HOME/.local/git/acerice"
    workTree="$HOME/"

    files=(
        "$HOME/.zprofile"
        "$HOME/.gitignore"
        "$HOME/img/background"
        "$XDG_CONFIG_HOME/alacritty"
        "$XDG_CONFIG_HOME/awesome"
        "$XDG_CONFIG_HOME/composer"
        "$XDG_CONFIG_HOME/dunst"
        "$XDG_CONFIG_HOME/etc"
        "$XDG_CONFIG_HOME/git"
        "$XDG_CONFIG_HOME/gtk-2.0"
        "$XDG_CONFIG_HOME/gtk-3.0"
        "$XDG_CONFIG_HOME/fontconfig"
        "$XDG_CONFIG_HOME/htop"
        "$XDG_CONFIG_HOME/i3"
        "$XDG_CONFIG_HOME/i3blocks"
        "$XDG_CONFIG_HOME/i3status"
        "$XDG_CONFIG_HOME/keepmenu"
        "$XDG_CONFIG_HOME/lazygit"
        "$XDG_CONFIG_HOME/lf"
        "$XDG_CONFIG_HOME/mpd"
        "$XDG_CONFIG_HOME/mpv"
        "$XDG_CONFIG_HOME/ncmpcpp"
        "$XDG_CONFIG_HOME/networkmanager-dmenu"
        "$XDG_CONFIG_HOME/nsxiv"
        "$XDG_CONFIG_HOME/qt5ct"
        "$XDG_CONFIG_HOME/tmux"
        "$XDG_CONFIG_HOME/wget"
        "$XDG_CONFIG_HOME/x11"
        "$XDG_CONFIG_HOME/zathura"
        "$XDG_CONFIG_HOME/zsh"
        "$XDG_CONFIG_HOME/backup.cfg"
        "$XDG_CONFIG_HOME/user-dirs.dirs"
        "$XDG_CONFIG_HOME/user-dirs.locale"
        "$XDG_CONFIG_HOME/QtProject.conf"
    )

    echoBlue -n "Current dir: $HOME"
    cd "$HOME" || exit 1

    echoBlue -n "Do you want to run backupetc? [y/N]"
    read -r answer

    if [ "$answer" == "y" ]; then
        backupetc
    fi

    echo

    # `git ls-files` to show tracked files
    for file in "${files[@]}"; do
        git --git-dir="$gitDir" --work-tree="$workTree" add "$file"
    done

    git --git-dir="$gitDir" --work-tree="$workTree" commit -m 'sync' --untracked-files=no
    git --git-dir="$gitDir" --work-tree="$workTree" push
    echo -e "\n======\n"
}

gitPull() {
    local pullDir="$1"

    echo -e "\e[1;34mCurrent dir: $pullDir\e[0m"
    cd "$pullDir" || exit 1
    git pull || exit 1
    echo -e "\n======\n"
}

gitStatus() {
    local statusDir="$1"

    echo -e "\e[1;34mCurrent dir: $statusDir\e[0m"
    cd "$statusDir" || exit 1
    git status
    echo -e "\n======\n"
}

case "$1" in
    "status")
        gitStatus "$HOME/.local/scripts"
        gitStatus "$HOME/.local/synced-doc"
        gitStatus "$HOME/.config/nvim"
        ;;
    "push")
        acericePush
        gitPush "$HOME/.local/scripts"
        gitPush "$HOME/.local/synced-doc"
        gitPush "$HOME/.config/nvim"
        ;;
    # "pull")
        #     gitPull "$HOME/.local/scripts"
        #     gitPull "$HOME/.local/synced-doc"
        #     gitPull "$HOME/.config/nvim"
        #     ;;
    *)
        echo "use status/push/pull" && exit 1
        ;;
esac
