#!/usr/bin/env bash

# shellcheck disable=SC1091

source config

GIT_BACKUP_FILE="$XDG_CONFIG_HOME/gitbackup.cfg"

gitPush() {
    local pushDir="$1"

    if [ ! -d "$pushDir" ]; then
        echo "Directory $pushDir doesn't exist."
        echo -e "\n================================\n"
        return
    fi

    echoBlue "Current dir: $pushDir"
    cd "$pushDir" || exit 1
    git add . || exit 1
    git commit -m "sync"
    git push || exit 1
    echo -e "\n================================\n"
}

dotfilesPush() {
    gitDir="$HOME/.local/git/dotfiles"
    workTree="$HOME/"

    if [ ! -d "$gitDir" ]; then
        echoRedExit "Directory $gitDir doesn't exist."
    fi

    # [!] NOT UPDATED
    # files=(
    #     "$HOME/.gitignore"

    #     "$HOME/.zprofile"
    #     "$HOME/img/background"
    #     "$XDG_CONFIG_HOME/alacritty"
    #     "$XDG_CONFIG_HOME/awesome"
    #     "$XDG_CONFIG_HOME/betterlockscreen/betterlockscreenrc"
    #     "$XDG_CONFIG_HOME/browser-extensions"
    #     "$XDG_CONFIG_HOME/composer/composer.json"
    #     "$XDG_CONFIG_HOME/dunst"
    #     "$XDG_CONFIG_HOME/etc"
    #     "$XDG_CONFIG_HOME/git"
    #     "$XDG_CONFIG_HOME/gtk-2.0"
    #     "$XDG_CONFIG_HOME/gtk-3.0"
    #     "$XDG_CONFIG_HOME/fontconfig"
    #     "$XDG_CONFIG_HOME/htop"
    #     "$XDG_CONFIG_HOME/i3"
    #     "$XDG_CONFIG_HOME/i3blocks"
    #     "$XDG_CONFIG_HOME/i3status"
    #     "$XDG_CONFIG_HOME/keepmenu"
    #     "$XDG_CONFIG_HOME/lazygit/config.yml"
    #     "$XDG_CONFIG_HOME/lf"
    #     "$XDG_CONFIG_HOME/mpd"
    #     "$XDG_CONFIG_HOME/mpv"
    #     "$XDG_CONFIG_HOME/ncmpcpp"
    #     "$XDG_CONFIG_HOME/networkmanager-dmenu"
    #     "$XDG_CONFIG_HOME/nsxiv"
    #     "$XDG_CONFIG_HOME/qt5ct"
    #     "$XDG_CONFIG_HOME/tmux"
    #     "$XDG_CONFIG_HOME/wget"
    #     "$XDG_CONFIG_HOME/x11"
    #     "$XDG_CONFIG_HOME/zathura"
    #     "$XDG_CONFIG_HOME/zsh"
    #     "$XDG_CONFIG_HOME/user-dirs.dirs"
    #     "$XDG_CONFIG_HOME/user-dirs.locale"
    #     "$XDG_CONFIG_HOME/rofi"
    #     "$XDG_CONFIG_HOME/npm"
    # )

    # files=$(sed "s/\$HOME/\/home\/$USER/g;s/\$XDG_CONFIG_HOME/\/home\/$USER\/\.config/g" $GIT_BACKUP_FILE)
    files=$(sed "/^#/d;s/\$HOME/\/home\/$USER/g;s/\$XDG_CONFIG_HOME/\/home\/$USER\/\.config/g" $GIT_BACKUP_FILE)

    # for file in "${files[@]}"; do
    #     echo $file
    # done

    # exit

    echoBlue "Current dir: $HOME"
    cd "$HOME" || exit 1

    echoBlue -n "Do you want to run backetc? [y/N]"
    read -r answer

    if [ "$answer" == "y" ]; then
        backetc
    fi

    # `git ls-files` to show tracked files
    # for file in "${files[@]}"; do
    git --git-dir="$gitDir" --work-tree="$workTree" add $files
    # done

    git --git-dir="$gitDir" --work-tree="$workTree" commit -m 'sync' --untracked-files=no
    git --git-dir="$gitDir" --work-tree="$workTree" push
    echo -e "\n================================\n"
}

gitPull() {
    local pullDir="$1"

    echo -e "\e[1;34mCurrent dir: $pullDir\e[0m"
    cd "$pullDir" || exit 1
    git pull || exit 1
    echo -e "\n================================\n"
}

gitStatus() {
    local statusDir="$1"

    echo -e "\e[1;34mCurrent dir: $statusDir\e[0m"
    cd "$statusDir" || exit 1
    git status
    echo -e "\n================================\n"
}

dotfilesStatus() {
    echo -e "\e[1;34mdotfiles status:\e[0m"
    cd || exit 1
    git --git-dir="$HOME/.local/git/dotfiles" --work-tree="$HOME/" status --untracked-files=no
    echo -e "\n================================\n"
}

case "$1" in
    "status")
        dotfilesStatus
        # TODO for loop
        gitStatus "$HOME/.local/scripts"
        gitStatus "$HOME/.local/git/moonwm"
        gitStatus "$HOME/.local/git/dwmblocks-async"
        gitStatus "$HOME/.local/git/st-enhanced"
        gitStatus "$HOME/.local/git/dmenu-enhanced"
        gitStatus "$HOME/.config/nvim"
        ;;
    "push")
        dotfilesPush
        # TODO for loop
        gitPush "$HOME/.local/scripts"
        gitPush "$HOME/.config/nvim"
        gitPush "$HOME/.local/git/moonwm"
        gitPush "$HOME/.local/git/dwmblocks-async"
        gitPush "$HOME/.local/git/st-enhanced"
        gitPush "$HOME/.local/git/dmenu-enhanced"
        ;;
    "pushdf")
        dotfilesPush
        ;;
    "statusdf")
        git --git-dir="$HOME/.local/git/dotfiles" --work-tree="$HOME/" status --untracked-files=no
        ;;
    "pulldf")
        git --git-dir="$HOME/.local/git/dotfiles" --work-tree="$HOME/" pull
        ;;
    *)
        echo "use status/push/pull/pushdf" && exit 1
        ;;
esac
